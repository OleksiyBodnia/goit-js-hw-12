{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst listOfPhotos = document.querySelector('.photos');\nconst renderingPhotos = data => {\n    data.forEach(element => {\n\n        const murkup = `<li class=\"photo\">\n            <a href=\"${element.largeImageURL}\" data-lightbox=\"photos\">\n                <img src=\"${element.webformatURL}\" alt=\"${element.tags}\" title=\"${element.tags}\" class=\"img\">\n            </a>\n            <ul class=\"list\">\n                <li class=\"item\"><h2>Likes <span>${element.likes}</span></h2></li>\n                <li class=\"item\"><h2>Views <span>${element.views}</span></h2></li>\n                <li class=\"item\"><h2>Comments <span>${element.comments}</span></h2></li>\n                <li class=\"item\"><h2>Downloads <span>${element.downloads}</span></h2></li>\n            </ul>\n        </li>`;\n\n        listOfPhotos.insertAdjacentHTML('beforeend', murkup);\n\n    });\n\n    const lightbox = new SimpleLightbox('.photos a', {});\n\n    lightbox.refresh();\n}\n\nconst loader = document.querySelector('.loader');\nconst form = document.querySelector('.form');\nconst input = document.querySelector('input');\n\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const inputValue = input.value;\n\n    if (!inputValue.trim()){\n        iziToast.error({\n            title: 'Error',\n            message: 'Please enter a search term',\n            position: 'topRight'\n        });\n    } else {\n        loader.style.display = 'block';\n        \n        fetch(`https://pixabay.com/api/?key=42291336-b4c9ef387c9d7e209159058e7&q=${inputValue}&image_type=photo&orientation=horizontal&safesearch=true`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(response.status);\n                }\n                return response.json();\n            })\n            .then(data => {\n                loader.style.display = 'none';\n\n                if (data.hits.length === 0){\n                    iziToast.error({\n                        message: 'Sorry, there are no images matching your search query. Please try again!',\n                        position: \"topRight\",\n                        icon: \"\"\n                    });\n                } else {\n                    renderingPhotos(data.hits);\n                }\n            })\n            .catch(error => {\n                loader.style.display = 'none';\n                console.log(error)\n            });\n        }\n\n        form.reset();\n        listOfPhotos.innerHTML = ''\n});"],"names":["listOfPhotos","renderingPhotos","data","element","murkup","SimpleLightbox","loader","form","input","event","inputValue","response","iziToast","error"],"mappings":"6vBAKA,MAAMA,EAAe,SAAS,cAAc,SAAS,EAC/CC,EAAkBC,GAAQ,CAC5BA,EAAK,QAAQC,GAAW,CAEpB,MAAMC,EAAS;AAAA,uBACAD,EAAQ,aAAa;AAAA,4BAChBA,EAAQ,YAAY,UAAUA,EAAQ,IAAI,YAAYA,EAAQ,IAAI;AAAA;AAAA;AAAA,mDAG3CA,EAAQ,KAAK;AAAA,mDACbA,EAAQ,KAAK;AAAA,sDACVA,EAAQ,QAAQ;AAAA,uDACfA,EAAQ,SAAS;AAAA;AAAA,eAIhEH,EAAa,mBAAmB,YAAaI,CAAM,CAE3D,CAAK,EAEgB,IAAIC,EAAe,YAAa,CAAE,CAAA,EAE1C,QAAO,CACpB,EAEMC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,OAAO,EAE5CD,EAAK,iBAAiB,SAAWE,GAAU,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAaF,EAAM,MAEpBE,EAAW,QAOZJ,EAAO,MAAM,QAAU,QAEvB,MAAM,qEAAqEI,CAAU,0DAA0D,EAC1I,KAAMC,GAAa,CAChB,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEnC,OAAOA,EAAS,MAChC,CAAa,EACA,KAAKT,GAAQ,CACVI,EAAO,MAAM,QAAU,OAEnBJ,EAAK,KAAK,SAAW,EACrBU,EAAS,MAAM,CACX,QAAS,2EACT,SAAU,WACV,KAAM,EAC9B,CAAqB,EAEDX,EAAgBC,EAAK,IAAI,CAE7C,CAAa,EACA,MAAMW,GAAS,CACZP,EAAO,MAAM,QAAU,OACvB,QAAQ,IAAIO,CAAK,CACjC,CAAa,GA/BLD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,6BACT,SAAU,UACtB,CAAS,EA8BDL,EAAK,MAAK,EACVP,EAAa,UAAY,EACjC,CAAC"}